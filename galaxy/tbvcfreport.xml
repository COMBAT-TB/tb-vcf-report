<?xml version="1.0" ?>
<tool id="tbvcfreport" name="M.tb VCF Report" version="@TOOL_VERSION@+galaxy0">
  <description>Annotate SnpEff VCF with links to Combat TB Explorer database</description>
  <macros>
    <token name="@TOOL_VERSION@">0.0.9</token>
  </macros>
  <requirements>
    <requirement type="package" version="@TOOL_VERSION@">tbvcfreport</requirement>
  </requirements>
  <command detect_errors="exit_code">
    <![CDATA[
    ln -s '$input_vcf' data.vcf &&
    tbvcfreport generate
    #if str($tbprofiler.use_tbp) == "yes"
        --tbprofiler_report '$tbprofiler_json'
    #end if
    data.vcf &&
    mv data_variants_report.html '$output' &&
    mv data_variants_report.txt '$txt_output'
    #if str($tbprofiler.use_tbp) == "yes"
        && mv data_drug_resistance_report.html '$drug_resistance_report'
        && mv data_drug_resistance_report.txt '$drug_resistance_report_txt'
    #end if
    ]]>
  </command>
  <inputs>
    <param name="input_vcf" type="data" format="vcf" label="Input VCF (with SnpEff annotation)" />
    <conditional name="tbprofiler">
      <param name="use_tbp" type="select" label="Use TBProfiler drug resistance report">
        <option value="yes" selected="true">Yes</option>
        <option value="no">No</option>
      </param>
      <when value="no"></when>
      <when value="yes">
        <param name="tbprofiler_json" type="data" format="json" label="TBProfiler (JSON) resistance report" />
      </when>
    </conditional>
  </inputs>
  <outputs>
    <data name="output" format="html" label="${tool.name} variants report on ${on_string}" />
    <data name="txt_output" format="txt" label="${tool.name} variants report on ${on_string}" />
    <data name="drug_resistance_report" format="html" label="${tool.name} drug resistance report on ${on_string}">
      <filter>tbprofiler['use_tbp'] == "yes"</filter>
    </data>
    <data name="drug_resistance_report_txt" format="txt" label="${tool.name} drug resistance report on ${on_string}">
      <filter>tbprofiler['use_tbp'] == "yes"</filter>
    </data>
  </outputs>
  <tests>
    <test>
      <param name="input_vcf" value="rif_resistant.vcf" ftype="vcf" />
      <param name="use_tbp" value="no" />
      <output name="output" compare="diff" lines_diff="2" file="rif_resistant_variants_report.html" ftype="html" />
      <output name="txt_output" compare="diff" lines_diff="2" file="rif_resistant_variants_report.txt" ftype="txt" />
    </test>
    <test>
      <param name="input_vcf" value="rif_resistant.vcf" ftype="vcf" />
      <param name="use_tbp" value="yes" />
      <param name="tbprofiler_json" value="rif_resistant.results.json" ftype="json" />
      <output name="output" compare="diff" lines_diff="2" file="rif_resistant_variants_report.html" ftype="html" />
      <output name="txt_output" compare="diff" lines_diff="2" file="rif_resistant_variants_report.txt" ftype="txt" />
      <output name="drug_resistance_report" file="rif_resistant_drug_resistance_report.html" lines_diff="2" ftype="html" />
      <output name="drug_resistance_report_txt" compare="diff" lines_diff="2" file="rif_resistant_drug_resistance_report.txt" ftype="txt" />
    </test>
  </tests>
  <help>
    <![CDATA[
    This tool generates an HTML-based VCF report from an input SnpEff VCF file.
    The input has to be a SnpEff generated VCF file.
    ]]>
  </help>
  <citations>
    <citation type="bibtex">
@misc{githubtbvcfreport,
  author = {SANBI-SA},
  year = {2019},
  title = {tbvcfreport},
  publisher = {GitHub},
  journal = {GitHub repository},
  url = {https://github.com/COMBAT-TB/tbvcfreport},
}</citation>
  </citations>
</tool>
